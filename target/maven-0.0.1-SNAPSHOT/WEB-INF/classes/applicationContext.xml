<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
<!-- 配置组件自动扫描 -->
	<context:component-scan base-package="com.hzx.maven">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	
	<!-- 导入资源文件 -->
		<context:property-placeholder location="classpath:db.properties"/>
		
	<!-- 配置C3P0数据源 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="user" value="${jdbc.user}"></property>
			<property name="password" value="${jdbc.password}"></property>
			<property name="driverClass" value="${jdbc.driverClass}"></property>
			<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
			
			<property name="initialPoolSize" value="${jdbc.initPoolSize}"></property>
			<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
		</bean>
		
	<!-- 配置和mybatis整合 -->	
		<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="configLocation" value="classpath:mybatis-config.xml"></property>
			<property name="dataSource" ref="dataSource"></property>
			<property name="mapperLocations" value="classpath:mapper/*xml"></property>	
		</bean>
		<!-- 批量添加 -->
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
			<constructor-arg name="executorType" value="SIMPLE"></constructor-arg>
		</bean>
		
		
		
		
		
		<!-- 配置扫描器，将Mybatis接口的实现加入到IOC容器中 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<!-- 扫描所有DAO接口实现，加入到IOC容器中 -->
			<property name="basePackage" value="com.hzx.maven.dao"></property>
		</bean>
		<!-- 配置Spring事务属性 -->
	
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"></property>
		</bean>
	<!-- 配置事务属性 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="get*"  read-only="true"/>
				<tx:method name="*"/>
			</tx:attributes>
	
		</tx:advice>
		<tx:annotation-driven/>
			<!-- 配置事务切入点，把事务属性跟事务切入点关联起来-->
		<aop:config>
			<aop:pointcut expression="execution(* com.hzx.maven.service.*.*(..))" id="txPointcut"/>
			<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
		</aop:config>
		
		
</beans>
